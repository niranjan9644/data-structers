#include <stdio.h>
#include <stdlib.h>

// Node structure
Struct Node {
    int data;
    struct Node* next;
} Node;

// Function to create a new node
Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
  
    }
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to append a node to the linked list
void append(Node** head_ref, int new_data) {
    Node* newNode = createNode(new_data);
    Node* last = *head_ref;

    if (*head_ref == NULL) {
        *head_ref = newNode;
        return;
    }

    while (last->next != NULL) {
        last = last->next;
    }

    last->next = newNode;
}

// Function to traverse the linked list and print its elements
void traverseList(Node* node) {
    while (node != NULL) {
        printf("%d -> ", node->data);
        node = node->next;
    }
    printf("NULL\n");
}

// Main function to test the linked list operations
int main() {
    Node* head = NULL;

    // Creating the linked list
    append(&head, 1);
    append(&head, 2);
    append(&head, 3);

    // Traversing the linked list
    traverseList(head);  // Output: 1 -> 2 -> 3 -> NULL

    // Freeing the allocated memory
    Node* current = head;
    Node* next = NULL;
    while (current != NULL) {
        next = current->next;
        free(current);
        current = next;
    }

    return 0;
}


